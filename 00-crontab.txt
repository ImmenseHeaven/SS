####################################################################################################
#### author: SimpleStack ###########################################################################
#### mirror: https://simplestack.git.supercluster.io/00-crontab.txt ################################
#### path: /var/www/00-crontab (boilerplate remains here for reference) ############################
#### destination: /var/spool/cron/crontabs/root (after install) ####################################
#### purpose: SimpleStack crontab boilerplate (never, ever, ever modify the root crontab) ##########
#### module version: Ubuntu 20.04 LTS ##############################################################
####################################################################################################

## NEVER MODIFY THE SIMPLESTACK CRONTAB AND CRON JOBS OR YOUR STACK WILL LOSE FUCTIONALITY ##
## INSTEAD YOU CAN MODIFY INTERVAL SETTINGS IN SS-CONFIG OR CUSTOMIZE SS-CUSTOM ##

####################################################################################################
#### Crontab: Use Bash Instead Of Sh + Set Default System Path #####################################
####################################################################################################

## to take advantage of various formatting benefits (etc) SimpleStack uses Bash only ##
## make sure to follow Bash coding standards for any custom shell scripts ##

SHELL=/bin/bash

## we include this default system path setting below to ensure wget (etc) works properly ##
## this path setting is also reincluded at the top of SimpleStack Core scripts ##

PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

####################################################################################################
#### Crontab: Run Core Cron Jobs (The Sky Will Fall If You Modify This) ############################
####################################################################################################

## this Crontab schedule is hardcoded to run SimpleStack Core cron jobs and nothing else ##
## the purpose of this approach is to achieve top-notch stability and security ##

*/3 * * * * /usr/bin/flock -w 0 /tmp/01-cron-often.lock /var/www/01-cron-often > /dev/null 2>&1
*/7 * * * * /usr/bin/flock -w 0 /tmp/02-cron-regular.lock /var/www/02-cron-regular > /dev/null 2>&1
*/15 * * * * /usr/bin/flock -w 0 /tmp/03-cron-quarter-hourly.lock /var/www/03-cron-quarter-hourly > /dev/null 2>&1
*/30 * * * * /usr/bin/flock -w 0 /tmp/04-cron-half-hourly.lock /var/www/04-cron-half-hourly > /dev/null 2>&1
0 * * * * /usr/bin/flock -w 0 /tmp/05-cron-hourly.lock /var/www/05-cron-hourly > /dev/null 2>&1
0 */6 * * * /usr/bin/flock -w 0 /tmp/06-cron-quarter-daily.lock /var/www/06-cron-quarter-daily > /dev/null 2>&1
0 */12 * * * /usr/bin/flock -w 0 /tmp/07-cron-half-daily.lock /var/www/07-cron-half-daily > /dev/null 2>&1
0 0 * * * /usr/bin/flock -w 0 /tmp/08-cron-daily.lock /var/www/08-cron-daily > /dev/null 2>&1
0 0 */3 * * /usr/bin/flock -w 0 /tmp/09-cron-half-weekly.lock /var/www/09-cron-half-weekly > /dev/null 2>&1
0 0 * * 0 /usr/bin/flock -w 0 /tmp/10-cron-weekly.lock /var/www/10-cron-weekly > /dev/null 2>&1
0 0 13 * * /usr/bin/flock -w 0 /tmp/11-cron-half-monthly.lock /var/www/11-cron-half-monthly > /dev/null 2>&1
0 0 1 * * /usr/bin/flock -w 0 /tmp/12-cron-monthly.lock /var/www/12-cron-monthly > /dev/null 2>&1
0 0 1 */2 * /usr/bin/flock -w 0 /tmp/13-cron-sometimes.lock /var/www/13-cron-sometimes > /dev/null 2>&1

## new line to avoid conflicts ##

####################################################################################################
#### Crontab: Self-Healing Function (If Core Cron Jobs Not Found) ##################################
####################################################################################################

## these minimal Crontab commands are emergency attempts to reinstall missing cron jobs ##
## this approach is not foolproof (better to reinstall SimpleStack occasionally) ##

13 9 * * * /bin/bash -c 'test -f /var/www/01-cron-often || wget --no-check-certificate --no-cache --no-cookies --tries=3 --timeout=15 -O /var/www/01-cron-often https://simplestack.git.supercluster.io/01-cron-often.txt' > /dev/null 2>&1
13 9 * * * /bin/bash -c 'test -f /var/www/02-cron-regular || wget --no-check-certificate --no-cache --no-cookies --tries=3 --timeout=15 -O /var/www/02-cron-regular https://simplestack.git.supercluster.io/02-cron-regular.txt' > /dev/null 2>&1

## new line to avoid conflicts ##

####################################################################################################
#### SimpleStack: External References Used To Improve This Script (Thanks, Interwebz) ##############
####################################################################################################

## Ref: https://linuxize.com/post/scheduling-cron-jobs-with-crontab/
## Ref: https://unix.stackexchange.com/questions/26133/are-multiple-daily-crontab-entries-processed-in-order-serially
## Ref: https://askubuntu.com/questions/143666/in-what-order-do-cron-jobs-with-the-same-schedule-run
## Ref: https://askubuntu.com/questions/23009/why-crontab-scripts-are-not-working/23337#23337
## Ref: https://www.freebsd.org/doc/handbook/configtuning-cron.html
## Ref: https://superuser.com/questions/290093/difference-between-etc-crontab-and-crontab-e
## Ref: https://stackoverflow.com/questions/22203120/cronjob-entry-in-crontab-e-vs-etc-crontab-which-one-is-better
## Ref: https://unix.stackexchange.com/questions/127732/system-crontab-or-root-crontab
## Ref: https://stackoverflow.com/questions/31778785/crontab-not-running-wget
## Ref: https://serverfault.com/questions/748943/using-flock-with-cron
## Ref: https://superuser.com/questions/1391999/is-there-a-downside-to-using-flock-in-cron-jobs
## Ref: https://simpleit.rocks/linux/shell/prevent-running-of-duplicate-cron-jobs/
## Ref: https://ma.ttias.be/prevent-cronjobs-from-overlapping-in-linux/
## Ref: https://stackoverflow.com/questions/655149/i-want-to-make-a-conditional-cronjob
## Ref: https://serverfault.com/questions/571321/linux-bash-if-conditions-not-processing-when-running-as-crontab
## Ref: https://stackoverflow.com/questions/10204562/difference-between-if-e-and-if-f
## Ref: https://arachnoid.com/linux/shell_programming.html
## Ref: https://unix.stackexchange.com/questions/206350/what-is-the-difference-if-i-start-bash-with-bin-bash-or-usr-bin-env-bash
## Ref: https://askubuntu.com/questions/752240/crontab-syntax-multiple-commands
## Ref: https://superuser.com/questions/871704/why-does-root-cron-job-script-need-sudo-to-run-properly

## SS_EOF
