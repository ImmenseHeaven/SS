#!/bin/bash

####################################################################################################
#### author: SimpleStack ###########################################################################
#### mirror: https://simplestack.git.supercluster.io/ss-install-wpconfig.txt #######################
#### path: /var/www/ss-install-wpconfig ############################################################
#### destination: n/a (not a boilerplate) ##########################################################
#### purpose: Reconfigures the wp-config.php file for production and staging (idempotent) ##########
#### module version: Ubuntu 20.04 LTS ##############################################################
####################################################################################################

## SS-CONFIG MUST BE PROPERLY CONFIGURED (AND CURRENT BUILD) BEFORE RUNNING SS-INSTALL ##
## ENSURE SS-CONFIG OPTIONS REMAIN CURRENT BY RUNNING SS-UPDATE OCCASIONALLY ##

## include SimpleStack configuration ##
source /var/www/ss-config

####################################################################################################
#### SimpleStack: Critical Bash Functions (Aliases) For This Script To Work ########################
####################################################################################################

## the below functions are hardcoded into every SimpleStack script to ensure reliability ##
## this also speeds up processing times by avoiding repeated inline commands ##

## variables ##
UBUNTU_VERSION=`lsb_release -rs`

## apt alias flags ##
function apt {
    export DEBIAN_FRONTEND=noninteractive
    export DEBIAN_PRIORITY=critical
    export PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
    command /usr/bin/apt --yes --quiet --option Dpkg::Options::=--force-confold --option Dpkg::Options::=--force-confdef "$@"
}

## add-apt-repository alias flags ##
function add-apt-repository {
    export DEBIAN_FRONTEND=noninteractive
    export DEBIAN_PRIORITY=critical
    export PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
    command /usr/bin/add-apt-repository --yes "$@"
}

## wget alias flags ##
function wget {
    command wget --no-check-certificate --no-cache --no-cookies --tries=3 --timeout=15 "$@"
}

## mysql alias flags ##
function mysql {
    command mysql --user=root --host=localhost --protocol=socket --port=3306 --force "$@"
}

## cp alias flags ##
function cp {
    command cp -R -f -d --no-preserve=mode,ownership "$@"
}

## rsync alias flags ##
function rsync {
    command rsync -aI --ignore-errors "$@"
}

## unzip alias flags ##
function unzip {
    command unzip -o "$@"
}

## mkdir alias flags ##
function mkdir {
    command mkdir -p "$@"
}

## rm alias flags ##
function rm {
    command rm -R -f "$@"
}

## ln alias flags ##
function ln {
    command ln -s -f "$@"
}

####################################################################################################
#### SS-Install-WPConfig: Configure WP-Config File (Production) ####################################
####################################################################################################

## here we retrieve latest wp-config.php boilerplate and customize per ss-config settings ##
## you should never make changes directly to wp-config.php in SimpleStack servers ##

## delete tmp files ##
rm /tmp/wp-config*

## retrieve latest wp-config boilerplate ##
wget -O /tmp/wp-config.txt https://simplestack.git.supercluster.io/wordpress/wp-config.txt

###### WP Multisite settings ########

## set multisite subdomains ##
if [[ -z "$WP_MULTISITE_SUBDOMAINS" ]]; then 
    sed -i "s/@WP_MULTISITE_SUBDOMAINS/true/g" /tmp/wp-config.txt
else 
    sed -i "s/@WP_MULTISITE_SUBDOMAINS/${WP_MULTISITE_SUBDOMAINS}/g" /tmp/wp-config.txt
fi

## set multisite ##
if [[ -z "$WP_MULTISITE" ]]; then 
    sed -i "s/@WP_MULTISITE/false/g" /tmp/wp-config.txt
else 
    sed -i "s/@WP_MULTISITE/${WP_MULTISITE}/g" /tmp/wp-config.txt
fi


####### other WP Config settings ##########

## replace database placeholders ##
sed -i "s/@DB_NAME/${DB_NAME}/g" /tmp/wp-config.txt
sed -i "s/@DB_USER/${DB_USER}/g" /tmp/wp-config.txt
sed -i "s/@DB_PASSWORD/${DB_PASSWORD}/g" /tmp/wp-config.txt
sed -i "s/@DB_HOST/${DB_HOST}/g" /tmp/wp-config.txt
sed -i "s/@DB_CHARSET/${DB_CHARSET}/g" /tmp/wp-config.txt
sed -i "s/@DB_COLLATE/${DB_COLLATE}/g" /tmp/wp-config.txt
sed -i "s/@DB_PREFIX/${DB_PREFIX}/g" /tmp/wp-config.txt

## set object cache (optional) ##
if [[ -z "$OBJECT_CACHE" ]]; then 
    sed -i "s/@OBJECT_CACHE/true/g" /tmp/wp-config.txt
else 
    sed -i "s/@OBJECT_CACHE/${OBJECT_CACHE}/g" /tmp/wp-config.txt
fi

## set object cache (optional) ##
if [[ -z "$WP_LANG" ]]; then 
    sed -i "s/@WP_LANG/en-US/g" /tmp/wp-config.txt
else 
    sed -i "s/@WP_LANG/${WP_LANG}/g" /tmp/wp-config.txt
fi

## replace domain placeholders ##
sed -i "s/@SITE_DOMAIN/${SITE_DOMAIN}/g" /tmp/wp-config.txt
sed -i "s/@SITE_TLD/${SITE_TLD}/g" /tmp/wp-config.txt

## replace SFTP Details placeholders ##
sed -i "s/@SFTP_USER/${SFTP_USER}/g" /tmp/wp-config.txt
sed -i "s/@SFTP_PASSWORD/${SFTP_PASSWORD}/g" /tmp/wp-config.txt
if [[ -z "$SSH_PORT" ]]; then 
    sed -i "s/@SSH_PORT/6969/g" /tmp/wp-config.txt
else 
    sed -i "s/@SSH_PORT/${SSH_PORT}/g" /tmp/wp-config.txt
fi

## replace CloudFlare placeholders ##
sed -i "s/@CLOUDFLARE_API_KEY/${CLOUDFLARE_API_KEY}/g" /tmp/wp-config.txt
sed -i "s/@CLOUDFLARE_API_EMAIL/${CLOUDFLARE_API_EMAIL}/g" /tmp/wp-config.txt

## CloudFlare DNS widget ##
if [[ -z "$CLOUDFLARE_WIDGET_DNS" ]]; then 
    sed -i "s/@CLOUDFLARE_WIDGET_DNS/true/g" /tmp/wp-config.txt
else 
    sed -i "s/@CLOUDFLARE_WIDGET_DNS/${CLOUDFLARE_WIDGET_DNS}/g" /tmp/wp-config.txt
fi

## replace salt keys ##
sed -i "s/@AUTHKEY/$(openssl rand -hex 48)/g" /tmp/wp-config.txt
sed -i "s/@SECUREAUTHKEY/$(openssl rand -hex 48)/g" /tmp/wp-config.txt
sed -i "s/@LOGGEDINKEY/$(openssl rand -hex 48)/g" /tmp/wp-config.txt
sed -i "s/@NONCEKEY/$(openssl rand -hex 48)/g" /tmp/wp-config.txt
sed -i "s/@AUTHSALT/$(openssl rand -hex 48)/g" /tmp/wp-config.txt
sed -i "s/@SECUREAUTHSALT/$(openssl rand -hex 48)/g" /tmp/wp-config.txt
sed -i "s/@LOGGEDINSALT/$(openssl rand -hex 48)/g" /tmp/wp-config.txt
sed -i "s/@NONCESALT/$(openssl rand -hex 48)/g" /tmp/wp-config.txt

## Replace Placeholders: Debug and Dev/staging server ##
if [[ "$SS_TYPE" != "production" ]]; then 
    sed -i "s/@WP_DEBUG/true/g" /tmp/wp-config.txt
    sed -i "s/@WP_LOCAL_DEV/true/g" /tmp/wp-config.txt
else 
    sed -i "s/@WP_DEBUG/false/g" /tmp/wp-config.txt
    sed -i "s/@WP_LOCAL_DEV/false/g" /tmp/wp-config.txt
fi

## multisite ##
if [[ "$WP_MULTISITE" == "true" ]]; then 
    sed -i "s/@WP_MULTISITE/true/g" /tmp/wp-config.txt
else 
    sed -i "s/@WP_MULTISITE/false/g" /tmp/wp-config.txt
fi

## core auto updates ##
if [[ -z "$WP_AUTO_UPDATE_CORE" ]]; then 
    sed -i "s/@WP_AUTO_UPDATE_CORE/minor/g" /tmp/wp-config.txt
else 
    sed -i "s/@WP_AUTO_UPDATE_CORE/${WP_AUTO_UPDATE_CORE}/g" /tmp/wp-config.txt
fi

## autosave (drafts) ##
if [[ -z "$WP_AUTOSAVE_INTERVAL" ]]; then 
    sed -i "s/@WP_AUTOSAVE_INTERVAL/60/g" /tmp/wp-config.txt
else 
    sed -i "s/@WP_AUTOSAVE_INTERVAL/${WP_AUTOSAVE_INTERVAL}/g" /tmp/wp-config.txt
fi

## revisions ##
if [[ -z "$WP_POST_REVISIONS" ]]; then 
    sed -i "s/@WP_POST_REVISIONS/5/g" /tmp/wp-config.txt
else 
    sed -i "s/@WP_POST_REVISIONS/${WP_POST_REVISIONS}/g" /tmp/wp-config.txt
fi

## block external requests ##
if [[ -z "$WP_HTTP_BLOCK_EXTERNAL" ]]; then 
    sed -i "s/@WP_HTTP_BLOCK_EXTERNAL/false/g" /tmp/wp-config.txt
else 
    sed -i "s/@WP_HTTP_BLOCK_EXTERNAL/${WP_HTTP_BLOCK_EXTERNAL}/g" /tmp/wp-config.txt
fi

## allowed hosts ##
if [[ -z "$WP_ACCESSIBLE_HOSTS" ]]; then 
    sed -i "s/@WP_ACCESSIBLE_HOSTS/api.wordpress.org/g" /tmp/wp-config.txt
else 
    sed -i "s/@WP_ACCESSIBLE_HOSTS/${WP_ACCESSIBLE_HOSTS}/g" /tmp/wp-config.txt
fi

## file edits ##
if [[ -z "$WP_DISALLOW_FILE_EDIT" ]]; then 
    sed -i "s/@WP_DISALLOW_FILE_EDIT/false/g" /tmp/wp-config.txt
else 
    sed -i "s/@WP_DISALLOW_FILE_EDIT/${WP_DISALLOW_FILE_EDIT}/g" /tmp/wp-config.txt
fi

## file mods ##
if [[ -z "$WP_DISALLOW_FILE_MODS" ]]; then 
    sed -i "s/@WP_DISALLOW_FILE_MODS/false/g" /tmp/wp-config.txt
else 
    sed -i "s/@WP_DISALLOW_FILE_MODS/${WP_DISALLOW_FILE_MODS}/g" /tmp/wp-config.txt
fi

## file uploads ##
if [[ -z "$WP_ALLOW_UNFILTERED_UPLOADS" ]]; then 
    sed -i "s/@WP_ALLOW_UNFILTERED_UPLOADS/true/g" /tmp/wp-config.txt
else 
    sed -i "s/@WP_ALLOW_UNFILTERED_UPLOADS/${WP_ALLOW_UNFILTERED_UPLOADS}/g" /tmp/wp-config.txt
fi

## for fresh (virgin) WP installs enable certain items ##
if [ ! -f "/var/www/meta/.cherry" ]; then 
    sed -i "s#//VIRGIN//##g" /tmp/wp-config.txt
fi

## rename files ##
mv /tmp/wp-config.txt /tmp/wp-config.php

## copy files to destinations ##
cp /tmp/wp-config.php /var/www/html/wp-config.php

## delete tmp files ##
rm /tmp/wp-config*

####################################################################################################
#### SS-Install-WPConfig: Configure WP-Config File (Staging) #######################################
####################################################################################################

## here we retrieve latest wp-config.php boilerplate and customize per ss-config settings ##
## you should never make changes directly to wp-config.php in SimpleStack servers ##

## delete tmp files ##
rm /tmp/wp-config*

## retrieve latest wp-config boilerplate ##
wget -O /tmp/wp-config-staging.txt https://simplestack.git.supercluster.io/wordpress/wp-config-staging.txt

###### WP Multisite settings ########

## set multisite subdomains ##
if [[ -z "$WP_MULTISITE_SUBDOMAINS" ]]; then 
    sed -i "s/@WP_MULTISITE_SUBDOMAINS/true/g" /tmp/wp-config-staging.txt
else 
    sed -i "s/@WP_MULTISITE_SUBDOMAINS/${WP_MULTISITE_SUBDOMAINS}/g" /tmp/wp-config-staging.txt
fi

## set multisite ##
if [[ -z "$WP_MULTISITE" ]]; then 
    sed -i "s/@WP_MULTISITE/false/g" /tmp/wp-config-staging.txt
else 
    sed -i "s/@WP_MULTISITE/${WP_MULTISITE}/g" /tmp/wp-config-staging.txt
fi

## multisite ##
if [[ "$WP_MULTISITE" == "true" ]]; then 
    sed -i "s/@WP_MULTISITE/true/g" /tmp/wp-config-staging.txt
else 
    sed -i "s/@WP_MULTISITE/false/g" /tmp/wp-config-staging.txt
fi


####### other WP Config settings ##########

## replace database placeholders ##
sed -i "s/@DB_NAME/${DB_NAME}/g" /tmp/wp-config-staging.txt
sed -i "s/@DB_USER/${DB_USER}/g" /tmp/wp-config-staging.txt
sed -i "s/@DB_PASSWORD/${DB_PASSWORD}/g" /tmp/wp-config-staging.txt
sed -i "s/@DB_HOST/${DB_HOST}/g" /tmp/wp-config-staging.txt
sed -i "s/@DB_CHARSET/${DB_CHARSET}/g" /tmp/wp-config-staging.txt
sed -i "s/@DB_COLLATE/${DB_COLLATE}/g" /tmp/wp-config-staging.txt
sed -i "s/@DB_PREFIX/staging_/g" /tmp/wp-config-staging.txt

## disable object cache (staging) ##
sed -i "s/@OBJECT_CACHE/false/g" /tmp/wp-config-staging.txt

## set language ##
if [[ -z "$WP_LANG" ]]; then 
    sed -i "s/@WP_LANG/en-US/g" /tmp/wp-config-staging.txt
else 
    sed -i "s/@WP_LANG/${WP_LANG}/g" /tmp/wp-config-staging.txt
fi

## replace domain placeholders ##
sed -i "s#@SITE_DOMAIN#${SITE_DOMAIN}#g" /tmp/wp-config-staging.txt
sed -i "s/@SITE_TLD/${SITE_TLD}/g" /tmp/wp-config-staging.txt

## replace SFTP Details placeholders ##
sed -i "s/@SFTP_USER/${SFTP_USER}/g" /tmp/wp-config-staging.txt
sed -i "s/@SFTP_PASSWORD/${SFTP_PASSWORD}/g" /tmp/wp-config-staging.txt
if [[ -z "$SSH_PORT" ]]; then 
    sed -i "s/@SSH_PORT/6969/g" /tmp/wp-config-staging.txt
else 
    sed -i "s/@SSH_PORT/${SSH_PORT}/g" /tmp/wp-config-staging.txt
fi

## replace CloudFlare placeholders ##
sed -i "s/@CLOUDFLARE_API_KEY/${CLOUDFLARE_API_KEY}/g" /tmp/wp-config-staging.txt
sed -i "s/@CLOUDFLARE_API_EMAIL/${CLOUDFLARE_API_EMAIL}/g" /tmp/wp-config-staging.txt

## CloudFlare DNS widget ##
if [[ -z "$CLOUDFLARE_WIDGET_DNS" ]]; then 
    sed -i "s/@CLOUDFLARE_WIDGET_DNS/true/g" /tmp/wp-config-staging.txt
else 
    sed -i "s/@CLOUDFLARE_WIDGET_DNS/${CLOUDFLARE_WIDGET_DNS}/g" /tmp/wp-config-staging.txt
fi

## replace salt keys ##
sed -i "s/@AUTHKEY/$(openssl rand -hex 48)/g" /tmp/wp-config-staging.txt
sed -i "s/@SECUREAUTHKEY/$(openssl rand -hex 48)/g" /tmp/wp-config-staging.txt
sed -i "s/@LOGGEDINKEY/$(openssl rand -hex 48)/g" /tmp/wp-config-staging.txt
sed -i "s/@NONCEKEY/$(openssl rand -hex 48)/g" /tmp/wp-config-staging.txt
sed -i "s/@AUTHSALT/$(openssl rand -hex 48)/g" /tmp/wp-config-staging.txt
sed -i "s/@SECUREAUTHSALT/$(openssl rand -hex 48)/g" /tmp/wp-config-staging.txt
sed -i "s/@LOGGEDINSALT/$(openssl rand -hex 48)/g" /tmp/wp-config-staging.txt
sed -i "s/@NONCESALT/$(openssl rand -hex 48)/g" /tmp/wp-config-staging.txt

## Replace Placeholders: Debug and Dev/staging server ##
sed -i "s/@WP_DEBUG/true/g" /tmp/wp-config-staging.txt
sed -i "s/@WP_LOCAL_DEV/false/g" /tmp/wp-config-staging.txt



## core auto updates ##
if [[ -z "$WP_AUTO_UPDATE_CORE" ]]; then 
    sed -i "s/@WP_AUTO_UPDATE_CORE/minor/g" /tmp/wp-config-staging.txt
else 
    sed -i "s/@WP_AUTO_UPDATE_CORE/${WP_AUTO_UPDATE_CORE}/g" /tmp/wp-config-staging.txt
fi

## autosave (drafts) ##
if [[ -z "$WP_AUTOSAVE_INTERVAL" ]]; then 
    sed -i "s/@WP_AUTOSAVE_INTERVAL/60/g" /tmp/wp-config-staging.txt
else 
    sed -i "s/@WP_AUTOSAVE_INTERVAL/${WP_AUTOSAVE_INTERVAL}/g" /tmp/wp-config-staging.txt
fi

## revisions ##
if [[ -z "$WP_POST_REVISIONS" ]]; then 
    sed -i "s/@WP_POST_REVISIONS/5/g" /tmp/wp-config-staging.txt
else 
    sed -i "s/@WP_POST_REVISIONS/${WP_POST_REVISIONS}/g" /tmp/wp-config-staging.txt
fi

## block external requests ##
if [[ -z "$WP_HTTP_BLOCK_EXTERNAL" ]]; then 
    sed -i "s/@WP_HTTP_BLOCK_EXTERNAL/false/g" /tmp/wp-config-staging.txt
else 
    sed -i "s/@WP_HTTP_BLOCK_EXTERNAL/${WP_HTTP_BLOCK_EXTERNAL}/g" /tmp/wp-config-staging.txt
fi

## allowed hosts ##
if [[ -z "$WP_ACCESSIBLE_HOSTS" ]]; then 
    sed -i "s/@WP_ACCESSIBLE_HOSTS/api.wordpress.org/g" /tmp/wp-config-staging.txt
else 
    sed -i "s/@WP_ACCESSIBLE_HOSTS/${WP_ACCESSIBLE_HOSTS}/g" /tmp/wp-config-staging.txt
fi

## file edits ##
sed -i "s/@WP_DISALLOW_FILE_EDIT/false/g" /tmp/wp-config-staging.txt

## file mods ##
sed -i "s/@WP_DISALLOW_FILE_MODS/false/g" /tmp/wp-config-staging.txt

## file uploads ##
if [[ -z "$WP_ALLOW_UNFILTERED_UPLOADS" ]]; then 
    sed -i "s/@WP_ALLOW_UNFILTERED_UPLOADS/true/g" /tmp/wp-config-staging.txt
else 
    sed -i "s/@WP_ALLOW_UNFILTERED_UPLOADS/${WP_ALLOW_UNFILTERED_UPLOADS}/g" /tmp/wp-config-staging.txt
fi

## rename files ##
mv /tmp/wp-config-staging.txt /tmp/wp-config-staging.php

## copy files to destinations ##
cp /tmp/wp-config-staging.php /var/www/html/staging/wp-config.php

## delete tmp files ##
rm /tmp/wp-config*

## remove and keep only in ss-sync ##
## create directories if doesn't exist (will not overwrite) ##
mkdir /var/www/html/staging/wp-content/temp
mkdir /var/www/html/staging/wp-content/uploads
mkdir /var/www/html/staging/wp-content/upgrade

####################################################################################################
#### SimpleStack: External References Used To Improve This Script (Thanks, Interwebz) ##############
####################################################################################################

## Ref: 

## SS_EOF

