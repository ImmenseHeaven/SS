#!/bin/bash

####################################################################################################
#### author: SimpleStack ###########################################################################
#### mirror: https://simplestack.git.supercluster.io/ss-install-redis.txt ##########################
#### path: /var/www/ss-install-redis ###############################################################
#### destination: n/a (not a boilerplate) ##########################################################
#### purpose: Reinstalls the entire Redis server module for object caching (idempotent) ############
#### module version: Ubuntu 20.04 LTS + Redis 5.0.x ################################################
####################################################################################################

## SS-CONFIG MUST BE PROPERLY CONFIGURED (AND CURRENT BUILD) BEFORE RUNNING SS-INSTALL ##
## ENSURE SS-CONFIG OPTIONS REMAIN CURRENT BY RUNNING SS-UPDATE OCCASIONALLY ##

## include SimpleStack configuration ##
source /var/www/ss-config

####################################################################################################
#### SimpleStack: Critical Bash Functions (Aliases) For This Script To Work ########################
####################################################################################################

## the below functions are hardcoded into every SimpleStack script to ensure reliability ##
## this also speeds up processing times by avoiding repeated inline commands ##

## variables ##
UBUNTU_VERSION=`lsb_release -rs`

## apt alias flags ##
function apt {
    export DEBIAN_FRONTEND=noninteractive
    export DEBIAN_PRIORITY=critical
    export PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
    command /usr/bin/apt --yes --quiet --option Dpkg::Options::=--force-confold --option Dpkg::Options::=--force-confdef "$@"
}

## add-apt-repository alias flags ##
function add-apt-repository {
    export DEBIAN_FRONTEND=noninteractive
    export DEBIAN_PRIORITY=critical
    export PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
    command /usr/bin/add-apt-repository --yes "$@"
}

## wget alias flags ##
function wget {
    command wget --no-check-certificate --no-cache --no-cookies --tries=3 --timeout=15 "$@"
}

## mysql alias flags ##
function mysql {
    command mysql --user=root --host=localhost --protocol=socket --port=3306 --force "$@"
}

## cp alias flags ##
function cp {
    command cp -R -f -d --no-preserve=mode,ownership "$@"
}

## rsync alias flags ##
function rsync {
    command rsync -aI --ignore-errors "$@"
}

## unzip alias flags ##
function unzip {
    command unzip -o "$@"
}

## mkdir alias flags ##
function mkdir {
    command mkdir -p "$@"
}

## rm alias flags ##
function rm {
    command rm -R -f "$@"
}

## ln alias flags ##
function ln {
    command ln -s -f "$@"
}

####################################################################################################
#### SS-Install-Redis: Install Redis Server + PHP-Redis Extension ##################################
####################################################################################################

## here we install redis-server (no client) for use in WordPress object caching (only) ##
## this Redis server package also includes the Redis CLI command line tools ##

## purge redis-server + php-redis ##
apt purge redis-server
apt purge php-redis

## install redis-server + php-redis ##
apt install redis-server
apt install php-redis

## configure redis-server for object caching (only) ##
sed -i '/maxmemory.*bytes.*/c\maxmemory 256mb' /etc/redis/redis.conf
sed -i '/maxmemory-policy noeviction/c\maxmemory-policy allkeys-lru' /etc/redis/redis.conf
sed -i '/always-show-logo yes/c\always-show-logo no' /etc/redis/redis.conf
# sed -i '/logfile/c\logfile /var/www/logs/redis.log' /etc/redis/redis.conf
# sed -i '/dir /c\dir /tmp' /etc/redis/redis.conf

## create log files if do not exist ##
# if [ ! -f "/var/www/logs/redis.log" ]; then touch "/var/www/logs/redis.log"; fi
# mkdir /var/run/redis

## reset permissions ##
chown redis:redis /var/www/logs/redis.log
chown redis:redis /etc/redis/redis.conf
chown redis:redis /var/run/redis
chmod 6775 /var/www/logs/redis.log
chmod 775 /etc/redis/redis.conf
chmod 775 /var/run/redis

####################################################################################################
#### SimpleStack: External References Used To Improve This Script (Thanks, Interwebz) ##############
####################################################################################################

## Ref: 

## SS_EOF
