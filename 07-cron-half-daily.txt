#!/bin/bash

####################################################################################################
#### author: SimpleStack ###########################################################################
#### mirror: https://simplestack.git.supercluster.io/07-cron-half-daily.txt ########################
#### path: /var/www/07-cron-half-daily #############################################################
#### destination: n/a (not a boilerplate) ##########################################################
#### purpose: SimpleStack cron job *half-daily* (07/13) will run ever 12 hours #####################
#### module version: Ubuntu 20.04 LTS ##############################################################
####################################################################################################

## NEVER MODIFY THE SIMPLESTACK CRONTAB AND CRON JOBS OR YOUR STACK WILL LOSE FUCTIONALITY ##
## INSTEAD YOU CAN MODIFY INTERVAL SETTINGS IN SS-CONFIG OR CUSTOMIZE SS-CUSTOM ##

## include SimpleStack configuration ##
source /var/www/ss-config

####################################################################################################
#### SimpleStack: Critical Bash Functions (Aliases) For This Script To Work ########################
####################################################################################################

## the below functions are hardcoded into every SimpleStack script to ensure reliability ##
## this also speeds up processing times by avoiding repeated inline commands ##

## Ubuntu version ##
UBUNTU_VERSION=`lsb_release -rs`

## apt alias flags ##
function apt {
    export DEBIAN_FRONTEND=noninteractive
    export DEBIAN_PRIORITY=critical
    export PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
    command /usr/bin/apt -q -y -o Dpkg::Options::=--force-confold -o Dpkg::Options::=--force-confdef "$@"
}

## add-apt-repository alias flags ##
function add-apt-repository {
    export DEBIAN_FRONTEND=noninteractive
    export DEBIAN_PRIORITY=critical
    export PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
    command /usr/bin/add-apt-repository -y "$@"
}

## mysql alias flags ##
function mysql {
    export MYSQL_PWD=$DB_PASSWORD_ROOT
    command mysql --user=root --database="$DB_NAME" --host="$DB_HOST" --protocol=tcp --port=3306 --force "$@"
}

## wget alias flags ##
function wget {
    command wget --no-check-certificate --no-cache --no-cookies --tries=3 --timeout=15 "$@"
}

## cp alias flags ##
function cp {
    command cp -R -f -d --no-preserve=mode,ownership "$@"
}

## rsync alias flags ##
function rsync {
    command rsync -aI --ignore-errors "$@"
}

## unzip alias flags ##
function unzip {
    command unzip -o "$@"
}

## rm alias flags ##
function rm {
    command rm -R -f "$@"
}

## mkdir alias flags ##
function mkdir {
    command mkdir -p "$@"
}

## ln alias flags ##
function ln {
    command ln -s -f "$@"
}

####################################################################################################
#### SimpleStack: Ensure SS-Check + SS-Worker (Core Scripts) Exist #################################
####################################################################################################

## this snippet improves redundancy by having Core Crons ensure that Core Scripts exist ##
## additionally the root Crontab in SimpleStack ensures that Core Crons exist too ##

## ensure ss-check intact ##
FILE_SS_CHECK="/var/www/ss-check"
STRING_SS_CHECK="SS_CHECK_EOF"
if [[ ! -f "$FILE_SS_CHECK" ]] || [[ -z $(grep -q "$STRING_SS_CHECK" "$FILE_SS_CHECK") ]]; then
    ## delete temp files ##
    rm /tmp/ss-check*
    ## download latest versions ##
    wget -O /tmp/ss-check https://simplestack.git.supercluster.io/ss-check.txt
    ## copy files to their destinations ##
    cp /tmp/ss-check /var/www/ss-check
    ## reset permissions ##
    chown root:root /var/www/ss-check
    chmod 6770 /var/www/ss-check
    ## delete temp files ##
    rm /tmp/ss-check*
fi

## ensure ss-worker intact ##
FILE_SS_WORKER="/var/www/ss-worker"
STRING_SS_WORKER="SS_EOF"
if [[ ! -f "$FILE_SS_WORKER" ]] || [[ -z $(grep -q "$STRING_SS_WORKER" "$FILE_SS_WORKER") ]]; then
    ## delete temp files ##
    rm /tmp/ss-worker*
    ## download latest versions ##
    wget -O /tmp/ss-worker https://simplestack.git.supercluster.io/ss-worker.txt
    ## copy files to their destinations ##
    cp /tmp/ss-worker /var/www/ss-worker
    ## reset permissions ##
    chown root:root /var/www/ss-worker
    chmod 6770 /var/www/ss-worker
    ## delete temp files ##
    rm /tmp/ss-worker*
fi

####################################################################################################
#### Cron Job (Half-Daily): Run Scheduled Tasks ####################################################
####################################################################################################

## the below tasks will be called if configured to run at this interval in ss-config ##
## certain tasks are automatically called if the relevant interval is missing ##

## run ss-dump if set to half-daily ##
if [[ "$SS_INTERVAL_DUMP" == "half-daily" ]]; then 
    source /var/www/ss-dump
fi

## run ss-clean if set to half-daily or if not defined (default) ##
if [[ "$SS_INTERVAL_CLEAN" == "half-daily" || -z "$SS_INTERVAL_CLEAN" ]]; then 
    source /var/www/ss-clean
fi

## run ss-install-wpconfig if set to half-daily ##
if [[ "$SS_INTERVAL_INSTALL_WPCONFIG" == "half-daily" ]]; then 
    source /var/www/ss-install-wpconfig
fi

## run ss-sync if set to half-daily or if not defined (default) ##
if [[ "$SS_INTERVAL_SYNC" == "half-daily" || -z "$SS_INTERVAL_SYNC" ]]; then 
    source /var/www/ss-sync
fi

## run ss-muplugs if set to half-daily ##
if [[ "$SS_INTERVAL_MUPLUGS" == "half-daily" ]]; then 
    source /var/www/ss-install-muplugins
fi

## run ss-perms if set to half-daily ##
if [[ "$SS_INTERVAL_PERMS" == "half-daily" ]]; then 
    source /var/www/ss-perms
fi

## run ss-dos2unix if set to half-daily ##
if [[ "$SS_INTERVAL_DOS2UNIX" == "half-daily" ]]; then 
    source /var/www/ss-dos2unix
fi

## run ss-purge if set to half-daily ##
if [[ "$SS_INTERVAL_PURGE" == "half-daily" ]]; then 
    source /var/www/ss-purge
fi

## delete lock files ##
rm /tmp/07-cron-half-daily*.lock*

####################################################################################################
#### SimpleStack: External References Used To Improve This Script (Thanks, Interwebz) ##############
####################################################################################################

## Ref:

## SS_EOF
