#!/bin/bash

####################################################################################################
#### author: SimpleStack ###########################################################################
#### mirror: https://simplestack.git.supercluster.io/ss-install.txt ################################
#### path: /var/www/ss-install #####################################################################
#### destination: n/a (not a boilerplate) ##########################################################
#### purpose: Reinstalls the entire SimpleStack server and all LEMP modules, etc (idempotent) ######
#### module version: Ubuntu 20.04 LTS ##############################################################
####################################################################################################

## SS-CONFIG MUST BE PROPERLY CONFIGURED (AND CURRENT BUILD) BEFORE RUNNING SS-INSTALL ##
## ENSURE SS-CONFIG OPTIONS REMAIN CURRENT BY RUNNING SS-UPDATE OCCASIONALLY ##

## include SimpleStack configuration ##
source /var/www/ss-config

####################################################################################################
#### SimpleStack: Critical Bash Functions (Aliases) For This Script To Work ########################
####################################################################################################

## the below functions are hardcoded into every SimpleStack script to ensure reliability ##
## this also speeds up processing times by avoiding repeated inline commands ##

## variables ##
UBUNTU_VERSION=`lsb_release -rs`

## apt alias flags ##
function apt {
    export DEBIAN_FRONTEND=noninteractive
    export DEBIAN_PRIORITY=critical
    export PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
    command /usr/bin/apt --yes --quiet --option Dpkg::Options::=--force-confold --option Dpkg::Options::=--force-confdef "$@"
}

## add-apt-repository alias flags ##
function add-apt-repository {
    export DEBIAN_FRONTEND=noninteractive
    export DEBIAN_PRIORITY=critical
    export PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
    command /usr/bin/add-apt-repository --yes "$@"
}

## wget alias flags ##
function wget {
    command wget --no-check-certificate --no-cache --no-cookies --tries=3 --timeout=15 "$@"
}

## mysql alias flags ##
function mysql {
    command mysql --user=root --host=localhost --protocol=socket --port=3306 --force "$@"
}

## cp alias flags ##
function cp {
    command cp -R -f -d --no-preserve=mode,ownership "$@"
}

## rsync alias flags ##
function rsync {
    command rsync -aI --ignore-errors "$@"
}

## unzip alias flags ##
function unzip {
    command unzip -o "$@"
}

## mkdir alias flags ##
function mkdir {
    command mkdir -p "$@"
}

## rm alias flags ##
function rm {
    command rm -R -f "$@"
}

## ln alias flags ##
function ln {
    command ln -s -f "$@"
}

####################################################################################################
#### SS-Install: Check OS Compability + Verify SS-Config Freshness + Backup Database ###############
####################################################################################################

## NEVER RUN SS-INSTALL UNLESS BUILD VERSION BELOW MATCHES CURRENT SS-CONFIG BOILERPLATE ##
## IN CASE OF EMERGENCY CONFLICTS THE SIMPLESTACK TEAM MIGHT MISMATCH SAID BUILDS ##

## ensure correct Ubuntu version is installed ##
if [[ "${UBUNTU_VERSION}" != "20.04" ]]; then
    echo -e "\e[93mSimpleStack is designed for Ubuntu 20.04, but this server is running Ubuntu ${UBUNTU_VERSION}.\e[0m" >&2
    exit 1
fi

## ensure ss-config build version matches ss-install build version ##
if [[ "$SS_BUILD" != "AUG2020C" ]]; then 
    echo -e "\e[93mYour ss-config file is outdated. Please update it by running ss-update and then run ss-install again.\e[0m" >&2
    exit 1
fi

## ensure enough disk space exists before proceeding ##
# COMING SOON

## backup database before proceeding ##
source /var/www/ss-dump

####################################################################################################
#### SS-Install: Configure Ubuntu (SimpleStack) Users + Set Various System Defaults ################
####################################################################################################

## TEMP ##
echo -e "\e[36mSINCE SS_BUILD JULY2020B MYSQL 8.0 IS NOT INSTALLING PROPERLY (PLEASE INSTALL MANUALLY)...\e[0m"
sleep 10s

## MESSAGE ##
echo -e "\e[36mConfiguring users, permissions and Ubuntu defaults...\e[0m"

## set root password ##
echo root:$ROOT_PASSWORD | /usr/sbin/chpasswd

## ensure root password never expires ##
chage -E -1 -m 0 -M -1 -I -1 -W 99999 root

## create sudo user ##
adduser --disabled-password --gecos "" $SUDO_USER
echo $SUDO_USER:$SUDO_PASSWORD | /usr/sbin/chpasswd

## create sftp user ##
adduser --disabled-password --gecos "" $SFTP_USER
echo $SFTP_USER:$SFTP_PASSWORD | /usr/sbin/chpasswd

## set default editor to nano ##
update-alternatives --set editor /bin/nano

## set timezone ##
if [[ -z "$SS_TIMEZONE" ]]; then 
    timedatectl set-timezone UTC
else 
    timedatectl set-timezone $SS_TIMEZONE
fi

####################################################################################################
#### SS-Install: Download Latest SimpleStack Core Scripts + Cron Jobs (Via SS-Check) ###############
####################################################################################################

## MESSAGE ##
echo -e "\e[36mRetrieving latest SimpleStack files and copying them to local server...\e[0m"

## download latest versions ##
wget -O /tmp/ss-check https://simplestack.git.supercluster.io/ss-check.txt

## copy files to their destinations ##
cp /tmp/ss-check /var/www/ss-check

## reset permissions ##
chown root:root /var/www/ss-check
chmod 6770 /var/www/ss-check

## run scripts ##
source /var/www/ss-check

####################################################################################################
#### SS-Install: Configure Ubuntu Root + Sudo User Permissions (Sudoers File) ######################
####################################################################################################

## MESSAGE ##
echo -e "\e[36mConfiguring the Sudoers file (root and sudo users)...\e[0m"

## download latest versions ##
wget -O /tmp/sudoers https://simplestack.git.supercluster.io/ubuntu/sudoers.txt

## replace variables ##
sed -i "s/@SUDO_USER/${SUDO_USER}/g" /tmp/sudoers

## copy files to their destinations ##
cp /tmp/sudoers /etc/sudoers

## reset permissions ##
chown root:root /etc/sudoers
chmod 0440 /etc/sudoers

####################################################################################################
#### Configure Ubuntu: SSH + SFTP Settings (a.k.a. SSHD Configuration) #############################
####################################################################################################

## MESSAGE ##
echo -e "\e[36mConfiguring SSH (SFTP) settings, user permissions, and port number...\e[0m"

## download latest versions ##
wget -O /tmp/sshd_config https://simplestack.git.supercluster.io/ubuntu/sshd-config.txt

## replace variables ##
sed -i "s/@SUDO_USER/${SUDO_USER}/g" /tmp/sshd_config
sed -i "s/@SFTP_USER/${SFTP_USER}/g" /tmp/sshd_config

## set SSH port number (optional) ##
if [[ -z "$SSH_PORT" ]]; then 
    sed -i "s/@SSH_PORT/6969/g" /tmp/sshd_config
else 
    sed -i "s/@SSH_PORT/${SSH_PORT}/g" /tmp/sshd_config
fi

## enable/disable password authentication (depending on if SSH_KEYS is enabled) ##
if [[ "$SSH_KEYS" == "true" ]]; then 
    sed -i "s/@SSH_PASSWORD_AUTHENTICATION/no/g" /tmp/sshd_config
else 
    sed -i "s/@SSH_PASSWORD_AUTHENTICATION/yes/g" /tmp/sshd_config
fi

## enable/disable public key authentication (depending on if SSH_KEYS is enabled) ##
if [[ "$SSH_KEYS" == "true" ]]; then 
    sed -i "s/@SSH_PUBKEY_AUTHENTICATION/yes/g" /tmp/sshd_config
else 
    sed -i "s/@SSH_PUBKEY_AUTHENTICATION/no/g" /tmp/sshd_config
fi

## allow IPv6 SSH sessions (any) if no IPv4 address is detected on the server ##
# if [[ CURRENT IP ADDRESS IS IPV6 ONLY ]]; then 
#    sed -i "s/AddressFamily inet/AddressFamily any/g" /tmp/sshd_config
# fi
## Ref: https://stackoverflow.com/questions/5281341/get-local-network-interface-addresses-using-only-proc
## Ref: https://stackoverflow.com/questions/39983121/how-to-detect-if-system-has-ipv6-enabled-in-a-unix-shell-script
## Ref: https://www.cyberciti.biz/faq/bash-shell-command-to-find-get-ip-address/

## copy files to their destinations ##
cp /tmp/sshd_config /etc/ssh/sshd_config

## reset permissions ##
chown root:root /etc/ssh/sshd_config
chmod 0440 /etc/ssh/sshd_config

mkdir /var/www/meta/.ssh
chown $SUDO_USER:$SUDO_USER /var/www/meta/.ssh
chmod 0755 /var/www/meta/.ssh ## should be 0775 as per Ubuntu docs

touch /var/www/meta/.ssh/authorized_keys
chown $SUDO_USER:$SUDO_USER /var/www/meta/.ssh/authorized_keys
chmod 0664 /var/www/meta/.ssh/authorized_keys ## should be 0664 as per Ubuntu docs

## restart services ##
/etc/init.d/ssh restart

####################################################################################################
#### SS-Install: Install SimpleStack (Ubuntu) Root Crontab File ####################################
####################################################################################################

## MESSAGE ##
echo -e "\e[36mInstalling the SimpleStack crontab file to Ubuntu root user crontab...\e[0m"

## install crontab ##
crontab /var/www/00-crontab

## reset permissions ##
chown root:root /var/spool/cron/crontabs/root
chmod 0600 /var/spool/cron/crontabs/root

## reload crontab ##
/etc/init.d/cron reload

####################################################################################################
#### SimpleStack: Set Dpkg Basic Settings + Update Apt (Package) Cache #############################
####################################################################################################

## MESSAGE ##
echo -e "\e[36mSet dpkg to noneractive and force confold and update apt cache...\e[0m"

## set confold as dpkg default (fail-safe in case apt upgrade called directly) ##
DEBIAN_FRONTEND=noninteractive dpkg --configure -a --force-confold

## update repo cache ##
apt update

####################################################################################################
#### SimpleStack: Install Various Modules Via Default Ubuntu Packages ##############################
####################################################################################################

## MESSAGE ##
echo -e "\e[36mInstalling various SimpleStack modules from most recent Ubuntu repos...\e[0m"

## upgrade installed Ubuntu packages (LEMP modules) + Linux kernel (apt feature) ##
apt full-upgrade

## run ss-install-misc ##
source /var/www/ss-install-misc

####################################################################################################
#### Install Cerbot (Let's Encrypt) Packages Via PPA Repos #########################################
####################################################################################################

## install software-properties-common (for Certbot) ##
# apt install software-properties-common

## add custom PPAs (for Certbot) ##
# add-apt-repository universe
# add-apt-repository ppa:certbot/certbot ## Ubuntu 20.04 now includes Certbot

## update again after adding custom ppas ##
# apt update

apt remove certbot 
add-apt-repository --remove ppa:certbot/certbot

## install Certbot ##
apt install certbot python3-certbot-nginx

####################################################################################################
#### SS-Install: Install PHP-FPM 7.4.x + Required PHP Extensions ###################################
####################################################################################################

## run ss-install-php ##
source /var/www/ss-install-php

####################################################################################################
#### SS-Install: Install WP-CLI Bash Aliases [wp] + SimpleStack Bash Aliases [ss] ##################
####################################################################################################

## run ss-install-bash ##
source /var/www/ss-install-bash

####################################################################################################
#### SimpleStack: Install Nginx Server + FastCGI Cache + OpenSSL ###################################
####################################################################################################

## run ss-install-nginx ##
source /var/www/ss-install-nginx

####################################################################################################
#### SS-Install: Install OpenSSL + Certbot (Let's Encrypt) Free SSL Certificates ###################
####################################################################################################

## run ss-encrypt ##
source /var/www/ss-encrypt

####################################################################################################
#### SS-Install: Install MySQL 8.0.x (Single Database Only) ########################################
####################################################################################################

## run ss-install-mysql ##
source /var/www/ss-install-mysql
 
####################################################################################################
#### SimpleStack: Install WordPress (Prod) + Configure WP-Config File (Prod + Staging) #############
####################################################################################################

## this script fetches the latest stable version of WordPress from SimpleStack mirrors ##
## major releases (unpatched) are never considered stable for our purposes ##

## run ss-install-wordpress ##
source /var/www/ss-install-wordpress

####################################################################################################
#### SimpleStack: Install Redis Server + PHP-Redis Extension #######################################
####################################################################################################

## run ss-install-redis ##
source /var/www/ss-install-redis

####################################################################################################
#### SS-Install: Install MU (Must-Use) Plugins (After PHP-FPM And Redis Installed) #################
####################################################################################################

## run ss-muplugs ##
source /var/www/ss-muplugs

####################################################################################################
#### SS-Install: Install Adminer (phpMyAdmin) ######################################################
####################################################################################################

## run ss-install-adminer ##
source /var/www/ss-install-adminer

####################################################################################################
#### SS-Install: Install ClamAV Antivirus ##########################################################
####################################################################################################

## run ss-install-clamav ##
source /var/www/ss-install-clamav

####################################################################################################
#### Configure Ubuntu: Optimize The System Kernel ##################################################
####################################################################################################

## delete tmp files ##
rm /tmp/sysctl*

## backup current Ubunt kernel file ##
cp /etc/sysctl.conf /etc/sysctl.conf.bak

## download latest versions ##
wget -O /tmp/sysctl.conf https://simplestack.git.supercluster.io/ubuntu/sysctl.txt

## copy files to their destinations ##
cp /tmp/sysctl.conf /etc/sysctl.conf

## reset permissions ##
chown root:root /etc/sysctl.conf
chmod 0664 /etc/sysctl.conf

####################################################################################################
#### SS-Install: Install UFW Firewall + Configure Firewall Rules ###################################
####################################################################################################

source /var/www/ss-install-ufw

####################################################################################################
#### SimpleStack: Finish Up Installation + Confirmation Message ####################################
####################################################################################################

## not a virgin install anymore ##
mkdir /var/www/meta/ && touch /var/www/meta/.cherry

## run scripts ##
source /var/www/ss-purge
source /var/www/ss-perms

## reset all logs to NULL ##
cat /dev/null > /var/www/logs/clamav.log
cat /dev/null > /var/www/logs/error.log
cat /dev/null > /var/www/logs/mysql.log
cat /dev/null > /var/www/logs/nginx.log
cat /dev/null > /var/www/logs/redis.log

## restart services ##
source /var/www/ss-restart

## confirm installation complete ##
echo -e "\e[36mSimpleStack installation complete! Please reboot server and ensure CloudFlare is activated with Full SSL mode.\e[0m"

####################################################################################################
#### SimpleStack: External References Used To Improve This Script (Thanks, Interwebz) ##############
####################################################################################################

## Ref: http://wproller.com ##
## Ref: https://github.com/bjornjohansen/deploy-wp-on-vps/blob/master/deploy.sh ##
## Ref: https://github.com/sm0k3net/Useful-Scripts/blob/master/wordpress.sh ##
## Ref: https://github.com/techandme/wordpress-vm ##
## Ref: https://github.com/QROkes/webinoly ##
## Ref: https://github.com/WordOps/WordOps ##
## Ref: https://www.isicca.com/en/lemp-howto-install-nginx-php7-mariadb/ ##
## Ref: https://gist.github.com/FeChagas/54b0cdf354b197dc8e417357d7687e8b ##
## Ref: https://github.com/GeekPress/WP-Quick-Install ##
## Ref: https://github.com/bajpangosh/High-Traffic-wordpress-server-configuration ##
## Ref: https://gist.github.com/nickfox-taterli/2c283d73ba817392fb0f9f15d9cfa514 ##
## Ref: https://gist.github.com/beardedinbinary/79d7ad34f9980f0a4c23 ##
## Ref: https://www.linuxbabe.com/security/letsencrypt-webroot-tls-certificate
## Ref: https://stackoverflow.com/questions/49668542/create-a-script-that-adds-lines-of-code-to-bashrc-then-reloads-the-terminal
## Ref: https://peteris.rocks/blog/unattended-installation-of-wordpress-on-ubuntu-server/
## Ref: https://serverfault.com/questions/783527/non-interactive-silent-install-of-mysql-5-7-on-ubuntu-16-04-lts/830352#830352
## Ref: https://www.percona.com/blog/2016/10/18/upgrading-to-mysql-5-7-beware-of-the-new-strict-mode/
## Ref: https://stackoverflow.com/questions/3601515/how-to-check-if-a-variable-is-set-in-bash
## Ref: https://serverfault.com/questions/773964/calculating-the-percentage-of-the-total-available-memory-on-linux-as-an-integer
## Ref: https://stackoverflow.com/questions/29271593/bash-check-for-amount-of-memory-installed-on-a-system-as-sanity-check
## Ref: https://stackoverflow.com/questions/50177216/how-to-grant-all-privileges-to-root-user-in-mysql-8-0
## Ref: https://stackoverflow.com/questions/28118296/bash-script-is-super-slow
## Ref: https://stackoverflow.com/questions/15445361/speeding-up-bash-scripts
## Ref: https://unix.stackexchange.com/questions/67057/bash-script-optimization-of-processing-speed
## Ref: https://unix.stackexchange.com/questions/313256/why-write-an-entire-bash-script-in-functions
## Ref: http://nginx.org/en/linux_packages.html
## Ref: https://www.digitalocean.com/community/questions/nginx-stable-or-mainline-for-production-server
## Ref: https://precisionsec.com/changing-the-wordpress-site-url-using-the-mysql-command-line/
## Ref: https://magc.co/box/notes/change-wp-urls-mysql/
## Ref: https://wordpress.stackexchange.com/questions/281814/wordpress-multisite-redirecting-to-wp-signup-php
## Ref: https://wordpress.stackexchange.com/questions/165507/site-redirecting-to-wp-signup-php
## Ref: https://askubuntu.com/questions/86849/how-to-unzip-a-zip-file-from-the-terminal
## Ref: https://www.computerhope.com/unix/rsync.htm
## Ref: https://lowendbox.com/blog/wordpress-cheap-vps-lowendscript/
## Ref: https://unix.stackexchange.com/questions/67057/bash-script-optimization-of-processing-speed
## Ref: http://www.los-gatos.ca.us/davidbu/faster_sh.html

## SS_EOF
